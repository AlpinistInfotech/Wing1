// <auto-generated />
using System;
using B2BClasses.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace B2BClasses.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210408070559_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("B2BClasses.Database.tblActiveSerivceProvider", b =>
                {
                    b.Property<int>("ServiceProvider")
                        .HasColumnType("int");

                    b.Property<DateTime>("DisabledFromDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceProvider");

                    b.ToTable("tblActiveSerivceProvider");
                });

            modelBuilder.Entity("B2BClasses.Database.tblActiveSerivceProviderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DisabledFromDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisabledBySystem")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceProvider")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tblActiveSerivceProviderLog");
                });

            modelBuilder.Entity("B2BClasses.Database.tblAirlineFareRule", b =>
                {
                    b.Property<int>("AirlineFareRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CabinBaggage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CancellationAdditionalCharge")
                        .HasColumnType("float");

                    b.Property<double>("CancellationCharge")
                        .HasColumnType("float");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckingBaggage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ReissueAdditionalCharge")
                        .HasColumnType("float");

                    b.Property<double>("ReissueCharge")
                        .HasColumnType("float");

                    b.Property<string>("ReissuePolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceProvider")
                        .HasColumnType("int");

                    b.Property<string>("resultIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("traceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AirlineFareRuleId");

                    b.ToTable("tblAirlineFareRule");
                });

            modelBuilder.Entity("B2BClasses.Database.tblCustomerIPFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowedAllIp")
                        .HasColumnType("bit");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblCustomerIPFilter");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowedAllIp = true,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("B2BClasses.Database.tblCustomerIPFilterDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilterId")
                        .HasColumnType("int");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilterId");

                    b.ToTable("tblCustomerIPFilterDetails");
                });

            modelBuilder.Entity("B2BClasses.Database.tblCustomerMarkup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MarkupAmt")
                        .HasColumnType("float");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblCustomerMarkup");
                });

            modelBuilder.Entity("B2BClasses.Database.tblCustomerMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternateNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CreditBalence")
                        .HasColumnType("float");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("WalletBalence")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("tblCustomerMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "New Delhi",
                            AlternateNo = "9873404402",
                            Code = "ADM",
                            ContactNo = "9873404402",
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditBalence = 0.0,
                            CustomerName = "Admin",
                            CustomerType = 0,
                            Email = "Prabhakarks90@gmail.com",
                            IsActive = true,
                            WalletBalence = 0.0
                        });
                });

            modelBuilder.Entity("B2BClasses.Database.tblMinBalenceAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountForDisableProvider")
                        .HasColumnType("float");

                    b.Property<double>("AmountForSendMail")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveFromDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ForAllServiceProvider")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblMinBalenceAlert");
                });

            modelBuilder.Entity("B2BClasses.Database.tblMinBalenceAlertDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlertId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceProvider")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("tblMinBalenceAlertDetails");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTboFareRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GenrationDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblTboFareRule");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTboTokenDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GenrationDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblTboTokenDetails");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTboTravelDetail", b =>
                {
                    b.Property<int>("TravelDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdultCount")
                        .HasColumnType("int");

                    b.Property<int>("CabinClass")
                        .HasColumnType("int");

                    b.Property<int>("ChildCount")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GenrationDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InfantCount")
                        .HasColumnType("int");

                    b.Property<int>("JourneyType")
                        .HasColumnType("int");

                    b.Property<double>("MinPublishFare")
                        .HasColumnType("float");

                    b.Property<double>("MinPublishFareReturn")
                        .HasColumnType("float");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TravelDetailId");

                    b.ToTable("tblTboTravelDetail");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTboTravelDetailResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OfferedFare")
                        .HasColumnType("float");

                    b.Property<double>("PublishedFare")
                        .HasColumnType("float");

                    b.Property<string>("ResultIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelDetailId")
                        .HasColumnType("int");

                    b.Property<int>("segmentId")
                        .HasColumnType("int");

                    b.HasKey("ResultId");

                    b.HasIndex("TravelDetailId");

                    b.ToTable("tblTboTravelDetailResult");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTripJackFareRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GenrationDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblTripJackFareRule");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTripJackTravelDetail", b =>
                {
                    b.Property<int>("TravelDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdultCount")
                        .HasColumnType("int");

                    b.Property<int>("CabinClass")
                        .HasColumnType("int");

                    b.Property<int>("ChildCount")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GenrationDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InfantCount")
                        .HasColumnType("int");

                    b.Property<int>("JourneyType")
                        .HasColumnType("int");

                    b.Property<double>("MinPublishFare")
                        .HasColumnType("float");

                    b.Property<double>("MinPublishFareReturn")
                        .HasColumnType("float");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TravelDetailId");

                    b.ToTable("tblTripJackTravelDetail");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTripJackTravelDetailResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OfferedFare")
                        .HasColumnType("float");

                    b.Property<double>("PublishedFare")
                        .HasColumnType("float");

                    b.Property<string>("ResultIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelDetailId")
                        .HasColumnType("int");

                    b.Property<int>("segmentId")
                        .HasColumnType("int");

                    b.HasKey("ResultId");

                    b.HasIndex("TravelDetailId");

                    b.ToTable("tblTripJackTravelDetailResult");
                });

            modelBuilder.Entity("B2BClasses.Database.tblUserMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblUserMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            IsActive = true,
                            Password = "123456",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("B2BClasses.Database.tblUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 11,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 12,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 13,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 21,
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 22,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 23,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 24,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 25,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 101,
                            UserId = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = 1,
                            CreatedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = 1,
                            ModifiedDt = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = 102,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("B2BClasses.Database.tblWalletBalanceAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MinBalance")
                        .HasColumnType("float");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblWalletBalanceAlert");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWalletDetailLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("Debit")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblWalletDetailLedger");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWalletDetailLedgerLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("Debit")
                        .HasColumnType("float");

                    b.Property<int>("FiscalYear")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("tblWalletDetailLedgerLog");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingConvenience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ConvenienceAmt")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveFromDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveToDt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblWingConvenience");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingMarkupCustomerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("MarkupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MarkupId");

                    b.ToTable("tblWingMarkupCustomerDetails");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingMarkupMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveFromDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveToDt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllPessenger")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllProvider")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicableOnEachPasenger")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MarkupAmt")
                        .HasColumnType("float");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblWingMarkupMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingMarkupPassengerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MarkupId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarkupId");

                    b.ToTable("tblWingMarkupPassengerType");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingMarkupServiceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MarkupId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceProvider")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarkupId");

                    b.ToTable("tblWingMarkupServiceProvider");
                });

            modelBuilder.Entity("B2BClasses.Database.tblCustomerIPFilter", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerMaster", "tblCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("tblCustomerMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblCustomerIPFilterDetails", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerIPFilter", "tblCustomerIPFilter")
                        .WithMany()
                        .HasForeignKey("FilterId");

                    b.Navigation("tblCustomerIPFilter");
                });

            modelBuilder.Entity("B2BClasses.Database.tblCustomerMarkup", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerMaster", "tblCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("tblCustomerMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblMinBalenceAlertDetails", b =>
                {
                    b.HasOne("B2BClasses.Database.tblMinBalenceAlert", "tblMinBalenceAlert")
                        .WithMany()
                        .HasForeignKey("AlertId");

                    b.Navigation("tblMinBalenceAlert");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTboTravelDetailResult", b =>
                {
                    b.HasOne("B2BClasses.Database.tblTboTravelDetail", "tblTboTravelDetail")
                        .WithMany("tblTboTravelDetailResult")
                        .HasForeignKey("TravelDetailId");

                    b.Navigation("tblTboTravelDetail");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTripJackTravelDetailResult", b =>
                {
                    b.HasOne("B2BClasses.Database.tblTripJackTravelDetail", "tblTripJackTravelDetail")
                        .WithMany("tblTripJackTravelDetailResult")
                        .HasForeignKey("TravelDetailId");

                    b.Navigation("tblTripJackTravelDetail");
                });

            modelBuilder.Entity("B2BClasses.Database.tblUserMaster", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerMaster", "tblCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("tblCustomerMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblUserRole", b =>
                {
                    b.HasOne("B2BClasses.Database.tblUserMaster", "tblUserMaster")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tblUserMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWalletBalanceAlert", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerMaster", "tblCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("tblCustomerMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWalletDetailLedger", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerMaster", "tblCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("tblCustomerMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWalletDetailLedgerLog", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerMaster", "tblCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("tblCustomerMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingMarkupCustomerDetails", b =>
                {
                    b.HasOne("B2BClasses.Database.tblCustomerMaster", "tblCustomerMaster")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("B2BClasses.Database.tblWingMarkupMaster", "tblWingMarkupMaster")
                        .WithMany()
                        .HasForeignKey("MarkupId");

                    b.Navigation("tblCustomerMaster");

                    b.Navigation("tblWingMarkupMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingMarkupPassengerType", b =>
                {
                    b.HasOne("B2BClasses.Database.tblWingMarkupMaster", "tblWingMarkupMaster")
                        .WithMany()
                        .HasForeignKey("MarkupId");

                    b.Navigation("tblWingMarkupMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblWingMarkupServiceProvider", b =>
                {
                    b.HasOne("B2BClasses.Database.tblWingMarkupMaster", "tblWingMarkupMaster")
                        .WithMany()
                        .HasForeignKey("MarkupId");

                    b.Navigation("tblWingMarkupMaster");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTboTravelDetail", b =>
                {
                    b.Navigation("tblTboTravelDetailResult");
                });

            modelBuilder.Entity("B2BClasses.Database.tblTripJackTravelDetail", b =>
                {
                    b.Navigation("tblTripJackTravelDetailResult");
                });
#pragma warning restore 612, 618
        }
    }
}
